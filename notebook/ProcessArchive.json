{
	"name": "ProcessArchive",
	"properties": {
		"folder": {
			"name": "Itron"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 40,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "40",
				"spark.dynamicAllocation.maxExecutors": "40"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e6228f9a-248c-4e3e-a6da-eefa0a86d1c4/resourceGroups/rg-bia-ittest-001/providers/Microsoft.Synapse/workspaces/syn-bia-ittest-001/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://syn-bia-ittest-001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"import pyspark.sql.functions as f\r\n",
					"import uuid\r\n",
					"import os\r\n",
					"import subprocess"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"source = \"abfss://idl@smuduw2bianpadl02.dfs.core.windows.net/import/Itron/dbo/Reading/\"\r\n",
					"sink = \"abfss://stg@smuduw2bianpadl02.dfs.core.windows.net/reading_history\"\r\n",
					"nfiles = 120\r\n",
					"partition = \"2016\"\r\n",
					"partition_filter = \"EndTimeYear=\" + partition\r\n",
					"endtime_c = f.col(\"EndTime\")\r\n",
					"utc_month = f.concat(f.lit(partition), f.lpad(f.month(endtime_c), 2, '0'))\r\n",
					"dw_created_dt = f.lit(\"2021-09-29 00:00:00\")\r\n",
					"schema = [\r\n",
					"    f.col(\"NodeID\").alias(\"read_id\"),\r\n",
					"    endtime_c.alias(\"utc_endtime\"),\r\n",
					"    f.col(\"DataValue\").alias(\"read_value\"),\r\n",
					"    f.col(\"StatusID\").alias(\"read_status\"),\r\n",
					"    f.col(\"ReadingGroupAlternateKey\").alias(\"read_group\"),\r\n",
					"    dw_created_dt.alias(\"dw_created_dt\"),\r\n",
					"    utc_month.alias(\"utc_month\")\r\n",
					"]\r\n",
					""
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"df = spark.read.parquet(source).filter(partition_filter).select(schema)\r\n",
					""
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"(df\r\n",
					"    .repartitionByRange(120, \"utc_month\", \"read_id\", \"utc_endtime\")\r\n",
					"    .write\r\n",
					"    .mode(\"overwrite\")\r\n",
					"    .partitionBy(\"utc_month\")\r\n",
					"    .parquet(sink))\r\n",
					""
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/microsoft-spark-utilities?pivots=programming-language-python\r\n",
					"from notebookutils import mssparkutils\r\n",
					"mssparkutils.fs.help()"
				],
				"attachments": null,
				"execution_count": 5
			}
		]
	}
}